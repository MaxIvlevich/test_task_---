services:
  postgres-db:
    image: postgres:16-alpine
    container_name: user-api-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - user-api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d user_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: user-api-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - user-api-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-api-app:
    build: .
    container_name: user-api-app
    ports:
      - "8080:8080"
    networks:
      - user-api-network
    env_file:
      - .env
    depends_on:
      postgres-db:
        condition: service_healthy
      minio:
        condition: service_healthy

networks:
  user-api-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data: